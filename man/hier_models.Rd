% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fn_heirarchical.R, R/fn_heirarchical_tmodel.R
\name{hier_models}
\alias{hier_models}
\alias{fn.hier.one.rep}
\alias{hierNormTheoryLm}
\alias{hierNormTheoryRestLm}
\alias{fn.compute.marginals.hierModelNormal}
\alias{tdensity}
\alias{fn.compute.marginals.hierModelTmodel}
\alias{fn.one.rep.tHierModel}
\alias{hier_TLm}
\title{MCMC functions for the hierarchical versions of Normal Theory Model, corresponding restricted version, and heavy-tailed version used in the paper.}
\usage{
fn.hier.one.rep(y, X, XtX, v1, v2, bstar, Beta, betalMat, Z, mu_rho, psi_rho,
  rho, step_logbstar, mu_rho_step, psi_rho_step, rho_step, step_Z)

hierNormTheoryLm(y, X, nkeep = 10000, nburn = 1000, mu0, Sigma0, a0, b0,
  mu_bstr, psi_bstr, swSq = 1, w1, w2, a_psir, b_psir, step_logbstar,
  mu_rho_step, psi_rho_step, rho_step, step_Z)

hierNormTheoryRestLm(y, X, regEst = "Huber", scaleEst = "Huber",
  nkeep = 10000, nburn = 1000, mu0, Sigma0, a0, b0, mu_bstr, psi_bstr,
  swSq = 1, w1, w2, a_psir, b_psir, maxit = 400, step_logbstar, mu_rho_step,
  psi_rho_step, rho_step, step_Z)

fn.compute.marginals.hierModelNormal(betalsamples, sigma2lsamples, yhold, Xhold)

tdensity(y, mean, sigma, nu)

fn.compute.marginals.hierModelTmodel(betalsamples, sigma2lsamples, yhold, Xhold)

fn.one.rep.tHierModel(y, X, v1, v2, bstar, Beta, betalMat, vlList, Z, mu_rho,
  psi_rho, rho, step_logbstar, mu_rho_step, psi_rho_step, rho_step, step_Z)

hier_TLm(y, X, nkeep = 10000, nburn = 1000, mu0, Sigma0, a0, b0, mu_bstr,
  psi_bstr, swSq = 1, w1, w2, a_psir, b_psir, nu, step_logbstar, mu_rho_step,
  psi_rho_step, rho_step, step_Z)
}
\arguments{
\item{y, X}{lists of group level responses and design matrices}

\item{XtX}{list of X'X - for all the groups (input for efficiency)}

\item{v1, v2}{desc}

\item{bstar}{desc}

\item{Beta}{desc}

\item{betalMat}{desc}

\item{Z}{desc}

\item{mu_rho}{desc}

\item{psi_rho}{desc}

\item{rho}{desc}

\item{step_logbstar, mu_rho_step, psi_rho_step, rho_step, step_Z}{tunning parameters for MH Steps}

\item{nkeep, nburn}{number of MCMC iterations to keep, number for burn in.}

\item{Sigma0}{is the 'variance' matrix of beta b_i~N(mu0,b^*Sigma0)}

\item{a0, b0}{prior parameters for sigma2}

\item{swSq}{default to 1.}

\item{w1, w2, a_psir, b_psir}{parameters definining prior for rho. In detail: rho~beta(mean=mu_rho, precision=psi_rho), mu_rho~beta(w1,w2) and psi_rho~gamma(a_psir, b_psir)}

\item{regEst}{Regression estimator on which to condition . Either Huber or Tukey.}

\item{scaleEst}{Scale estimator on which to condition('Huber' is only option here)}

\item{betalsamples}{the array of betals: in the specific format: the 3rd dimension is the groups. columns represent samples, row represent slopes}

\item{yhold}{list of holdout samples}

\item{Xhold}{list of design matrices}

\item{mean}{center of t distribution}

\item{sigma}{scale of t distribution}

\item{nu}{degrees of freedom}

\item{sigma2Int}{is the vector of sigma2i initial values}

\item{mu0:}{prior mean of each beta}

\item{v1, v2}{parameters for beta on b_start. mu_bstr is the mean and psi_bstr (originally had a prior) is the precision of the beta prior for b^*}

\item{sigma2lsamples:}{columns represnt groups, rows represent samples}

\item{y}{data}

\item{betalsamples}{the array of betals: in the specific format: the 3rd dimension is the groups. columns represent samples, row represent slopes}

\item{sigma2lsamples:}{columns represnt groups, rows represent samples}

\item{yhold}{list of holdout samples}

\item{Xhold}{list of design matrices}

\item{nu}{degrees of freedom in t model}

\item{nu}{fixed degrees of freedom for assumed t-distribution}
}
\description{
MCMC functions for the hierarchical versions of Normal Theory Model, corresponding restricted version, and heavy-tailed version used in the paper.

Function to fit restricted likelihood version of hierarchical model in paper
}
\details{
fn.hier.one.rep is one rep for the full normal thoery model. heirNormTheoryLm uses fn.hier.one.rep for the complete MCMC of full normal thoert model. hierNormTheoryRestLm does the same for the restricted versions. The corresponding t-model versions are handedl by fn.one.rep.tHierModel and hier_TLm.

Details of the model are describted in the paper.
}
